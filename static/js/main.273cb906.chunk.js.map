{"version":3,"sources":["assets/img/carousal/slide1.webp","assets/img/carousal/slide2.webp","assets/img/carousal/slide3.webp","serviceWorker.js","pages/Hero/index.js","containers/Home/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Hero","_useState","useState","_useState2","Object","slicedToArray","zoom","setZoom","react_default","a","createElement","lib_default","assign","dots","autoplay","autoplaySpeed","slidesToShow","slidesToScroll","arrows","pauseOnHover","afterChange","idx","onInit","className","undefined","src","Slide1","alt","Slide2","Slide3","Home","pages_Hero","history","createBrowserHistory","basename","process","App","react_router","exact","path","component","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+LCUpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,gKCoBSC,SA/BF,WAAM,IAAAC,EACOC,oBAAS,GADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACVK,EADUH,EAAA,GACJI,EADIJ,EAAA,GAWjB,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAAF,EAADL,OAAAQ,OAAA,GAXa,CACfC,MAAM,EACNC,UAAU,EACVC,cAAe,IACfC,aAAc,EACdC,eAAgB,EAChBC,QAAQ,EACRC,cAAc,GAIZ,CACEC,YAAa,SAAAC,GAAG,OAAId,EAAQc,IAC5BC,OAAQ,kBAAMf,EAAQ,MAEtBC,EAAAC,EAAAC,cAAA,OAAKa,UAAoB,IAATjB,EAAa,sBAAmBkB,GAC9ChB,EAAAC,EAAAC,cAAA,OAAKe,IAAKC,IAAQC,IAAI,kBAExBnB,EAAAC,EAAAC,cAAA,OAAKa,UAAoB,IAATjB,EAAa,sBAAmBkB,GAC9ChB,EAAAC,EAAAC,cAAA,OAAKe,IAAKG,IAAQD,IAAI,kBAExBnB,EAAAC,EAAAC,cAAA,OAAKa,UAAoB,IAATjB,EAAa,sBAAmBkB,GAC9ChB,EAAAC,EAAAC,cAAA,OAAKe,IAAKI,IAAQF,IAAI,sBClBjBG,EARF,WACX,OACEtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqB,EAAD,QCDAC,EAAUC,YAAqB,CACnCC,SAAUC,KAeGC,MAZf,WACE,OACE5B,EAAAC,EAAAC,cAAA,OAAKa,UAAU,OACbf,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAQL,QAASA,GACfxB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACE7B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWV,0BCL3CW,IAASC,OAELlC,EAAAC,EAAAC,cAACiC,EAAD,MAEFC,SAASC,eAAe,SJ4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.273cb906.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slide1.8bce7aef.webp\";","module.exports = __webpack_public_path__ + \"static/media/slide2.7256f309.webp\";","module.exports = __webpack_public_path__ + \"static/media/slide3.8e5b87b6.webp\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport Slider from \"react-slick\";\nimport { Slide1, Slide2, Slide3 } from '../../assets';\nimport './hero.scss';\n\nconst Hero = () => {\n  const [zoom, setZoom] = useState(false);\n  const settings = {\n    dots: false,\n    autoplay: true,\n    autoplaySpeed: 5000,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n    pauseOnHover: false\n  };\n  return (\n    <div>\n      <Slider {...settings}\n        afterChange={idx => setZoom(idx)}\n        onInit={() => setZoom(0)}\n      >\n        <div className={zoom === 0 ? \"img-hover-zoom\" : undefined}>\n          <img src={Slide1} alt=\"img-carousel\" />\n        </div>\n        <div className={zoom === 1 ? \"img-hover-zoom\" : undefined}>\n          <img src={Slide2} alt=\"img-carousel\" />\n        </div>\n        <div className={zoom === 2 ? \"img-hover-zoom\" : undefined}>\n          <img src={Slide3} alt=\"img-carousel\" />\n        </div>\n      </Slider>\n    </div>\n  )\n}\n\nexport default Hero;\n\n// import React from 'react';\n// import { UncontrolledCarousel } from 'reactstrap';\n\n// const items = [\n//   {\n//     src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22218.3%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n//     altText: 'Slide 1',\n//     caption: 'Slide 1',\n//     header: 'Slide 1 Header',\n//     key: '1'\n//   },\n//   {\n//     src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n//     altText: 'Slide 2',\n//     caption: 'Slide 2',\n//     header: 'Slide 2 Header',\n//     key: '2'\n//   },\n//   {\n//     src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n//     altText: 'Slide 3',\n//     caption: 'Slide 3',\n//     header: 'Slide 3 Header',\n//     key: '3'\n//   }\n// ];\n\n// const Hero = () => <UncontrolledCarousel items={items} />;\n\n// export default Hero;\n","import React from 'react';\nimport { Hero } from '../../pages';\n\nconst Home = () => {\n  return (\n    <div>\n      <Hero />\n    </div>\n  )\n}\n\nexport default Home;\n","import React from \"react\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from './containers';\n\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL,\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}